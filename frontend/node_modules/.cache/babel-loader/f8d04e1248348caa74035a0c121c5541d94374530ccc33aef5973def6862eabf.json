{"ast":null,"code":"var _jsxFileName = \"D:\\\\freelance1\\\\alps-crm\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const setAuthToken = token => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      localStorage.setItem('token', token);\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const {\n        data\n      } = await api.post('/auth/login', {\n        email,\n        password\n      });\n      setAuthToken(data.token);\n      setUser(data.user);\n      toast.success(`Welcome back, ${data.user.username}!`);\n      navigate('/');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n      throw err;\n    }\n  };\n  const register = async userData => {\n    try {\n      const {\n        data\n      } = await api.post('/auth/register', userData);\n      setAuthToken(data.token);\n      setUser(data.user);\n      toast.success('Registration successful!');\n      navigate('/');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      toast.error(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n      throw err;\n    }\n  };\n  const logout = () => {\n    setAuthToken(null);\n    setUser(null);\n    toast.info('Logged out successfully');\n    navigate('/login');\n  };\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        setAuthToken(token);\n        try {\n          const {\n            data\n          } = await api.get('/auth/me');\n          setUser(data);\n        } catch (err) {\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"ENpDY189BxdYQb/+Kqkmy2zicns=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","api","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","navigate","setAuthToken","defaults","headers","common","setItem","removeItem","login","email","password","data","post","success","username","err","_err$response","_err$response$data","error","response","message","register","userData","_err$response2","_err$response2$data","logout","info","loadUser","get","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/freelance1/alps-crm/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(localStorage.getItem('token'));\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    const setAuthToken = (token) => {\r\n        if (token) {\r\n            api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n            localStorage.setItem('token', token);\r\n        } else {\r\n            delete api.defaults.headers.common['Authorization'];\r\n            localStorage.removeItem('token');\r\n        }\r\n    };\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            const { data } = await api.post('/auth/login', { email, password });\r\n            setAuthToken(data.token);\r\n            setUser(data.user);\r\n            toast.success(`Welcome back, ${data.user.username}!`);\r\n            navigate('/');\r\n        } catch (err) {\r\n            toast.error(err.response?.data?.message || 'Login failed');\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            const { data } = await api.post('/auth/register', userData);\r\n            setAuthToken(data.token);\r\n            setUser(data.user);\r\n            toast.success('Registration successful!');\r\n            navigate('/');\r\n        } catch (err) {\r\n            toast.error(err.response?.data?.message || 'Registration failed');\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuthToken(null);\r\n        setUser(null);\r\n        toast.info('Logged out successfully');\r\n        navigate('/login');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loadUser = async () => {\r\n            if (token) {\r\n                setAuthToken(token);\r\n                try {\r\n                    const { data } = await api.get('/auth/me');\r\n                    setUser(data);\r\n                } catch (err) {\r\n                    logout();\r\n                }\r\n            }\r\n            setLoading(false);\r\n        };\r\n        loadUser();\r\n    }, [token]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, loading, login, register, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACe,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMmB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,YAAY,GAAIP,KAAK,IAAK;IAC5B,IAAIA,KAAK,EAAE;MACPV,GAAG,CAACkB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUV,KAAK,EAAE;MAChEE,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;IACxC,CAAC,MAAM;MACH,OAAOV,GAAG,CAACkB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;MACnDR,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IACpC;EACJ,CAAC;EAED,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrC,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAM1B,GAAG,CAAC2B,IAAI,CAAC,aAAa,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MACnER,YAAY,CAACS,IAAI,CAAChB,KAAK,CAAC;MACxBD,OAAO,CAACiB,IAAI,CAAClB,IAAI,CAAC;MAClBP,KAAK,CAAC2B,OAAO,CAAC,iBAAiBF,IAAI,CAAClB,IAAI,CAACqB,QAAQ,GAAG,CAAC;MACrDb,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOc,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACV/B,KAAK,CAACgC,KAAK,CAAC,EAAAF,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcL,IAAI,cAAAM,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI,cAAc,CAAC;MAC1D,MAAML,GAAG;IACb;EACJ,CAAC;EAED,MAAMM,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACjC,IAAI;MACA,MAAM;QAAEX;MAAK,CAAC,GAAG,MAAM1B,GAAG,CAAC2B,IAAI,CAAC,gBAAgB,EAAEU,QAAQ,CAAC;MAC3DpB,YAAY,CAACS,IAAI,CAAChB,KAAK,CAAC;MACxBD,OAAO,CAACiB,IAAI,CAAClB,IAAI,CAAC;MAClBP,KAAK,CAAC2B,OAAO,CAAC,0BAA0B,CAAC;MACzCZ,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,OAAOc,GAAG,EAAE;MAAA,IAAAQ,cAAA,EAAAC,mBAAA;MACVtC,KAAK,CAACgC,KAAK,CAAC,EAAAK,cAAA,GAAAR,GAAG,CAACI,QAAQ,cAAAI,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcZ,IAAI,cAAAa,mBAAA,uBAAlBA,mBAAA,CAAoBJ,OAAO,KAAI,qBAAqB,CAAC;MACjE,MAAML,GAAG;IACb;EACJ,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACjBvB,YAAY,CAAC,IAAI,CAAC;IAClBR,OAAO,CAAC,IAAI,CAAC;IACbR,KAAK,CAACwC,IAAI,CAAC,yBAAyB,CAAC;IACrCzB,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZ,MAAM4C,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAIhC,KAAK,EAAE;QACPO,YAAY,CAACP,KAAK,CAAC;QACnB,IAAI;UACA,MAAM;YAAEgB;UAAK,CAAC,GAAG,MAAM1B,GAAG,CAAC2C,GAAG,CAAC,UAAU,CAAC;UAC1ClC,OAAO,CAACiB,IAAI,CAAC;QACjB,CAAC,CAAC,OAAOI,GAAG,EAAE;UACVU,MAAM,CAAC,CAAC;QACZ;MACJ;MACAzB,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IACD2B,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,CAAChC,KAAK,CAAC,CAAC;EAEX,oBACIP,OAAA,CAACC,WAAW,CAACwC,QAAQ;IAACC,KAAK,EAAE;MAAErC,IAAI;MAAEE,KAAK;MAAEI,OAAO;MAAES,KAAK;MAAEa,QAAQ;MAAEI;IAAO,CAAE;IAAAlC,QAAA,EAC1EA;EAAQ;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC1C,EAAA,CAtEWF,YAAY;EAAA,QAIJN,WAAW;AAAA;AAAAmD,EAAA,GAJnB7C,YAAY;AAwEzB,eAAeD,WAAW;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}