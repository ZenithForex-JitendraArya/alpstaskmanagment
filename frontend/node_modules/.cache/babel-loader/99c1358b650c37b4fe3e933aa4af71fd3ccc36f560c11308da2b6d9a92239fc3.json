{"ast":null,"code":"var _jsxFileName = \"D:\\\\freelance1\\\\alps-crm\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const setAuthToken = token => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      localStorage.setItem('token', token);\n      setToken(token);\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n      setToken(null);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const {\n        data\n      } = await api.post('/auth/login', {\n        email,\n        password\n      });\n      setAuthToken(data.token);\n      setUser(data.user);\n      toast.success(`Welcome back, ${data.user.username}!`);\n      return true; // Success\n    } catch (err) {\n      var _err$response, _err$response$data;\n      toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n      throw err;\n    }\n  };\n  const register = async userData => {\n    try {\n      const {\n        data\n      } = await api.post('/auth/register', userData);\n      setAuthToken(data.token);\n      setUser(data.user);\n      toast.success('Registration successful!');\n      return true; // Success\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      toast.error(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n      throw err;\n    }\n  };\n  const logout = () => {\n    setAuthToken(null);\n    setUser(null);\n    toast.info('Logged out successfully');\n    return true; // Success\n  };\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          const {\n            data\n          } = await api.get('/auth/me');\n          setUser(data);\n        } catch (err) {\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","api","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","setAuthToken","defaults","headers","common","setItem","removeItem","login","email","password","data","post","success","username","err","_err$response","_err$response$data","error","response","message","register","userData","_err$response2","_err$response2$data","logout","info","loadUser","get","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/freelance1/alps-crm/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from 'react';\r\nimport api from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(localStorage.getItem('token'));\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const setAuthToken = (token) => {\r\n        if (token) {\r\n            api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n            localStorage.setItem('token', token);\r\n            setToken(token);\r\n        } else {\r\n            delete api.defaults.headers.common['Authorization'];\r\n            localStorage.removeItem('token');\r\n            setToken(null);\r\n        }\r\n    };\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            const { data } = await api.post('/auth/login', { email, password });\r\n            setAuthToken(data.token);\r\n            setUser(data.user);\r\n            toast.success(`Welcome back, ${data.user.username}!`);\r\n            return true; // Success\r\n        } catch (err) {\r\n            toast.error(err.response?.data?.message || 'Login failed');\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            const { data } = await api.post('/auth/register', userData);\r\n            setAuthToken(data.token);\r\n            setUser(data.user);\r\n            toast.success('Registration successful!');\r\n            return true; // Success\r\n        } catch (err) {\r\n            toast.error(err.response?.data?.message || 'Registration failed');\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setAuthToken(null);\r\n        setUser(null);\r\n        toast.info('Logged out successfully');\r\n        return true; // Success\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loadUser = async () => {\r\n            if (token) {\r\n                try {\r\n                    const { data } = await api.get('/auth/me');\r\n                    setUser(data);\r\n                } catch (err) {\r\n                    logout();\r\n                }\r\n            }\r\n            setLoading(false);\r\n        };\r\n        loadUser();\r\n    }, [token]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, loading, login, register, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}