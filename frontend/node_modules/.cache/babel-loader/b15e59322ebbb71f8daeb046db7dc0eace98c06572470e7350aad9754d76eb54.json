{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\n});\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response2$data, _error$response3;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'An error occurred';\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) !== 401) {\n    toast.error(message);\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","toast","API","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","_error$response2","_error$response2$data","_error$response3","status","removeItem","window","location","href","message","data","Promise","reject"],"sources":["D:/freelance1/alps-crm/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst API = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n});\r\n\r\nAPI.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n});\r\n\r\nAPI.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (error.response?.status === 401) {\r\n            localStorage.removeItem('token');\r\n            window.location.href = '/login';\r\n        }\r\n\r\n        const message = error.response?.data?.message || 'An error occurred';\r\n        if (error.response?.status !== 401) {\r\n            toast.error(message);\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default API;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;AAC9C,CAAC,CAAC;AAEFL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;AAEFT,GAAG,CAACM,YAAY,CAACS,QAAQ,CAACP,GAAG,CACxBO,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA;EACP,IAAI,EAAAH,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBI,MAAM,MAAK,GAAG,EAAE;IAChCV,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC;EAEA,MAAMC,OAAO,GAAG,EAAAR,gBAAA,GAAAF,KAAK,CAACD,QAAQ,cAAAG,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBS,IAAI,cAAAR,qBAAA,uBAApBA,qBAAA,CAAsBO,OAAO,KAAI,mBAAmB;EACpE,IAAI,EAAAN,gBAAA,GAAAJ,KAAK,CAACD,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAChCtB,KAAK,CAACiB,KAAK,CAACU,OAAO,CAAC;EACxB;EAEA,OAAOE,OAAO,CAACC,MAAM,CAACb,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}